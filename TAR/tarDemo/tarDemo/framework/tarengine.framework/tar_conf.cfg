<conf>
    #############################################################################
    # 相机内参参数
    <camera_param>
        # 相机标定时指定的摄像机宽高参数
        width=800
        height=600
        # 内参矩阵，长度为16的数组，列主序，用“，”分隔
        mat=1010.47,0,432.9343,0,0,993.4,266.4337,0,0,0,1,0,0,0,0,1
        #mat=256.2839,0,158.3003,0,0,256.2839,87.773,0,0,0,1,0,0,0,0,1
        # 内参矩阵畸变因子，长度为9的数组，用“，”分隔
        dis_factor=0.06426786,-0.2498499,-0.003535052,0.001137612,1002.336,985.403,432.9343,266.4337,0.9919499,0
    </camera_param>
    
    # 日志级别1：debug 4：error 5：None
    log_level=4
    
    # sdk处理视频帧时使用的尺寸
    frame_width=640
    frame_height=480
    
    #############################################################################
    # 当前Tar SDK使用的算法实现
    marker_base_name=TarMarkerImpl
    marker_alg_base_name=TarPlaneAlgHandle

    <cmt>
        skip_frame_flag=0
        max_point_num=100
        fast_threshold=10
        edge_shrink_rate=1
        grid_width=20
        grid_height=20
    </cmt>
    
    <motion_detect>
        grid_width=10
        grid_height=10
        move_pixel_thresh=30
        static_frame_thresh=3
        FAST_thresh=20
        track_point_thresh=100
        blur_thresh=10
    </motion_detect>
    
    <plane>
        search_resize_marker=1
        search_marker_num_thresh=100
        search_knn_point_thresh=16
        search_inlier_point_thresh=16
        search_gftt_point_thresh=300
        search_marker_feat_point_thresh=2000
        search_frame_feat_point_thresh=2000
        
        track_h_point_thresh=16
        track_add_max_point_thresh=300
        track_add_min_point_thresh=300
        track_first_add_point_num=300
        track_tpl_win_half_size=5
        track_search_win_half_size=10
        track_tpl_sim_thresh=0.8
        
        marker_pyr_level_num=6
    </plane>

    # 按marker类型注册的算法集合，如果不适用某一类marker，则不配置即可
    <marker_alg_set>
        <std_marker>
            <alg_param>
                # 标准marker实现算法注册名
                class_name=TARMarkerPatDetect
            </alg_param>
        </std_marker>
        <nft_marker>
            <alg_param>
                # 自然图片marker首帧检测算法注册名
                detect_class_name=TarFrameProcHandle
                # 自然图片marker位置跟踪算法注册名
                track_class_name=TarOpticalFlowTrack
                # detect track是否公用feature
                share_detect_track_feature=0
            </alg_param>
        </nft_marker>
        <face_marker>
            <alg_param>
                # 人脸检测算法注册名
                detect_class_name=TarFace
                # 人脸跟踪算法注册名
                track_class_name=TarFaceTrack
                # detect track是否公用feature
                share_detect_track_feature=0
            </alg_param>
        </face_marker>
        <region_marker>
            <alg_param>
                class_name=TarCMTRegionMarkerTrack
            </alg_param>
        </region_marker>
    </marker_alg_set>
    
    #############################################################################
    # marker姿态平滑算法
    <marker_pose_smooth>
        # 是否打开marker位置姿态矩阵平滑功能，如果打开则需要配置平滑算法注册名
        enable=0
        # marker位置姿态矩阵平滑算法注册名
        class_name=TarKalmanPoseAdjust
        rotation_factor=0.5
        translation_factor=0.5
        cutoff_value=20
        sample_rate=25
    </marker_pose_smooth>
    
    #############################################################################
    # 本地marker配置信息
    <marker>
        <marker_0>
            # 是否启动该marker，方便配置
            enable=1
            # marker id，需要加载的marker的id不重复，可不连续
            id=1
            # 值为nft\std\face，该为marker对应的类型
            type=nft
            # marker特征文件相对于本conf文件所在目录的相对路径，不同算法自己决定如何使用
            feature_file = 10-0.jpg
            # marker特征文件对应的参数|./marker/qb/qb-logo-2.jpg |15.0 ./marker/10rmb/10-0.jpg qb_penguin_420_490.jpg|./marker/mingren/mingren.jpg
            filter=15.0
        </marker_0>
    </marker>
</conf>
